version: "3.4"

services:
  db:
    image: postgres:12
    restart: always
    volumes:
      - "./${chain}/data/database:/var/lib/postgresql/data" # need to store at /data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  indexer:
    image: subsquid/hydra-indexer:5
    restart: unless-stopped
    environment:
      - WORKERS_NUMBER=50
      - DB_NAME=${chain}-archive
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_PORT=5432
      - REDIS_URI=redis://redis:6379/0
      - WS_PROVIDER_ENDPOINT_URI=wss://${chain}.api.onfinality.io/public-ws
      - BUNDLE_TYPES=/configs/typesBundle.json
    volumes:
      - "./${chain}/typesBundle.json:/configs/typesBundle.json"
    depends_on:
      - db
      - redis
    command: >
      sh -c "yarn db:bootstrap && yarn start:prod"

  indexer-gateway:
    image: subsquid/hydra-indexer-gateway:5
    restart: unless-stopped
    depends_on:
      - redis
      - db
      - indexer-status-service
      - indexer
    ports:
      - "4010:8080"
    environment:
      - DEV_MODE=true
      - DB_NAME=${chain}-archive
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_PORT=5432
      - HYDRA_INDEXER_STATUS_SERVICE=http://indexer-status-service:8081/status

  indexer-status-service:
    image: subsquid/hydra-indexer-status-service:5
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_URI: redis://redis:6379/0
      PORT: 8081

  redis:
    image: redis:6.0-alpine
    restart: always
    ports:
      - "6379"

  nginx:
    image: nginx:1.15-alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./${chain}/data/nginx:/etc/nginx/conf.d
      - ./${chain}/data/certbot/conf:/etc/letsencrypt
      - ./${chain}/data/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./${chain}/data/certbot/conf:/etc/letsencrypt
      - ./${chain}/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

